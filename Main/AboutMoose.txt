When first learning MOOSE, it is important to keep in mind the purpose behind it. MOOSE stands for Multi-Physics Object Oriented Simulation Environment, and we will go through this piece by piece until we have a firm understanding of what MOOSE is. Let's start with the basics.

Physics: Physics has the power to describe many physical phenomena with extraordinary accuracy. Many times, these phenomena are represented through mathematical formulas. Perhaps the most intuitive type of mathematical formula used is the partial differential equation. If you are unfamiliar with the term, I would suggest moving to the math tutorial section for a minute or two to discover what this means. At it's base, MOOSE is a partial differential equation solver, using a numerical method called the finite element method, which is also discussed in the math tutorial section. It is vitally important to see MOOSE as a tool to do this, and only this.

Multi-Physics: While physics has the power to describe much of the world around us, it is often hard to describe too many things around us without getting into a great deal of complexity. Because of this, researchers become extremely specialized, focusing only on their specific topic. Unfortunately, any simulations they write will be extremely hard to integrate with any other type of physics. In response to this, MOOSE creates a platform where all simulations are written in the same way, allowing simulations to be easily integrated. We get more into this topic in our training on input files, which discusses how this combination occurs.

Object Oriented: In my personal opinion, this is largest benefit to using MOOSE. To demonstrate this, let's discuss for a second the way scientific computing works at INL. INL has a variety of extremely smart scientists that perform research on a variety of topics. Much of the time, these research areas are very related. In this case, much of the code for one person works for another, and they only need to change one small piece. Since the code is written in an object oriented style with a high level of modularity, it is very straightforward to switch out one piece of code for another, while keeping the rest of the code exactly the same. This is actually implemented in input files, as you will soon see.

Simulation Environment: We will end the way we started, talking about the purpose of MOOSE. MOOSE is meant to simulate physical phenomena by solving a common type of mathematical model, the partial differential equation. It accomplishes this through the finite element method and well-designed and well thought out implementation of that method. This allows for the user to spend the least possible time implementing code, and more time running simulations.
